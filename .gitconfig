[user]
    name = Aaron Cruz
    email = aaron@aaroncruz.com

[alias]
    a = add
    aa = add --all
    ae = add --edit
    ai = add --interactive
    amend = commit --amend -C HEAD
    ap = add --patch
    aliases = config --get-regexp alias
    au = add --update
    b = branch
    bug = "!f() { git checkout -b bug/$1; }; f"
    c = commit
    ca = commit --amend
    changes = diff --name-status -r
    cm = commit --message
    co = checkout
    cpc = cherry-pick
    d = diff
    dc = diff --cached
    div = divergence
    ds = diff --staged
    f = fetch
    feature = "!f() { git checkout -b feature/$1; }; f"
    h = help
    irb = rebase --interactive
    ksdiff = difftool -y -t Kaleidoscope
    ksreview = "!sh -c 'SHA=${1:-HEAD}; BRANCH=${2:-master}; if [ $SHA == $BRANCH ] ; then SHA=HEAD; fi; git difftool -y -t Kaleidoscope $BRANCH...$SHA;' -"
    ksshow = "!sh -c 'SHA=${1:-HEAD}; git difftool -y -t Kaleidoscope $SHA^..$SHA;' -"
    l = log --oneline --decorate
    lg = log --graph --pretty=format:'%Cred%h%Creset %an -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    ls-ignored = ls-files --exclude-standard --ignored --others
    m = merge
    mm = merge --no-ff
    msg = commit --allow-empty -m
    p = push
    pick = cherry-pick
    picks = cherry-pick -s
    picke = cherry-pick -e
    prune-remotes = "!for remote in `git remote`; do git remote prune $remote; done"
    pu = push -u origin master
    r = remote
    ra = !git log --graph --abbrev-commit --date=relative -20 --all --pretty='format:%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'
    rb = rebase
    rba = rebase --abort
    rbc = rebase --continue
    rbs = rebase --skip
    rh = reset --hard
    ru = remote update --prune
    s = status --short --branch
    sl = shortlog
    sm = submodule
    sma = submodule add
    smu = submodule update --init
    st = stash
    stl = stash list
    stp = stash pop
    undo = reset --soft HEAD^
    wd = diff --color-words
    wds = diff --color-words --staged
    puss = "!sh -c 'cat ~/.asciicat.txt'"

[advice]
    pushNonFastForward = false
    statusHints = false

[apply]
    whitespace = nowarn

[diff]
    renames = copies
    mnemonicprefix = true
    tool = Kaleidoscope

[difftool]
    prompt = false

[pager]
    color = true

[branch]
    autosetupmerge = true

[color]
    ui = auto
    
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
    
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
    
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
    
[svn]
    brokenSymlinkWorkaround = false

[push]
    default = tracking

[help]
    autocorrect = 0

[core]
    excludesfile = ~/.gitignore
    whitespace = trailing-space,space-before-tab
    quotepath = false
    editor = mvim -f --nomru -c \"au VimLeave * !open -a iTerm\"

[rerere]
    enabled = 1

[git-tmbundle]
    gitx-path = /usr/local/bin/gitx

[difftool "Kaleidoscope"]
    cmd = ksdiff-wrapper git \"$LOCAL\" \"$REMOTE\"

[merge "bundleinstall"]
    name = bundle install
    driver = bundle install

[merge "railsschema"]
    name = newer Rails schema version
    driver = "ruby -e '\n\
        system %(git), %(merge-file), %(--marker-size=%L), %(%A), %(%O), %(%B)\n\
        b = File.read(%(%A))\n\
        b.sub!(/^<+ .*\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n=+\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n>+ .*/) do\n\
          %(ActiveRecord::Schema.define(:version => #{[$1, $2].max}) do)\n\
        end\n\
        File.open(%(%A), %(w)) {|f| f.write(b)}\n\
        exit 1 if b.include?(%(<)*%L)'"

[merge]
    stat = true
    diff = vimdiff

[diff "zip"]
  textconv = unzip -c -a

[github]
    user = pferdefleisch
